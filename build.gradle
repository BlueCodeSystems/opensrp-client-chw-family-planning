// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'java'
    id 'build-dashboard'
    id 'io.codearte.nexus-staging' version '0.30.0'
}

configure(allprojects) { project ->
    version = VERSION_NAME
    group = GROUP
}

// Override group for BlueCode publishing when requested (e.g., on JitPack)
def useBlueCodeGroup = (System.getenv('JITPACK') != null) || project.hasProperty('useBlueCodeGroup')
if (useBlueCodeGroup) {
    allprojects { it.group = 'io.github.bluecodesystems' }
}

project.ext.preDexLibs = !project.hasProperty('disablePreDex')

subprojects {

    group = 'org.smartregister'

    // Keep existing SDK values; adjust as needed later
    ext.androidToolsBuildGradle     = '8.6.0'
    ext.androidBuildToolsVersion    = '35.0.0'
    ext.androidMinSdkVersion        = 28
    ext.androidCompileSdkVersion    = 35
    ext.androidTargetSdkVersion     = 35

    ext.androidAnnotationsVersion = '3.0.1'
    ext.androidAnnotationsAPIVersion = '3.0.1'

    repositories {
        // Prefer local artifacts during development
        mavenLocal()
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        // Keep historical repos if still needed by transitive deps
        maven { url "https://repo.maven.apache.org/maven2" }
        // Legacy artifacts (e.g., CWAC Saferoom) were on JCenter; also try CommonsWare repo
        maven { url 'https://repo.commonsware.com' }
        maven { url 'https://s3.amazonaws.com/repo.commonsware.com' }
        // Fallback only if needed
        jcenter()
    }

    // Ensure consistent JVM args for all unit tests (JDK 17+)
    tasks.withType(Test).configureEach { t ->
        // Needed by Mockito/ByteBuddy/Objenesis and Java serialization on JDK 17+
        t.jvmArgs(
                '--add-opens=java.base/java.lang=ALL-UNNAMED',
                '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED',
                '--add-opens=java.base/jdk.internal.reflect=ALL-UNNAMED',
                '--add-opens=java.base/java.lang.invoke=ALL-UNNAMED',
                '--add-opens=java.base/java.io=ALL-UNNAMED',
                '--add-opens=java.base/java.util=ALL-UNNAMED',
                '--add-exports=java.base/jdk.internal.reflect=ALL-UNNAMED'
        )
    }
}

buildDashboard {
    reports.html.setDestination(file("build/"))
}

// Use Gradle 8+ report configuration API
test {
    reports {
        html.required.set(false)
        junitXml.required.set(false)
    }
}


def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}
